/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel;

import database.DBConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Othak Kosonk
 */
public class NilaiPanelView extends javax.swing.JPanel {

    private final String[] headers = {"NIM", "Mahasiswa", "MATA KULIAH", "NILAI"};
    private final Connection connection;
    private final DefaultTableModel tableModel;

    /**
     * Creates new form NilaiView
     */
    public NilaiPanelView() {
        initComponents();

        tableModel = new DefaultTableModel(headers, 0);
        tblNilaiMahasiswa.setModel(tableModel);

        connection = DBConnection.getConnection();

        loadComboMataKuliah();
    }

    private void loadComboMataKuliah() {
        String mataKuliahQuery = "SELECT mata_kuliah FROM mata_kuliah";

        cmbMataKuliah.addItem("Mata Kuliah");
        try {
            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery(mataKuliahQuery);
            while (resultSet.next()) {
                cmbMataKuliah.addItem(resultSet.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNim = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        txtNama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbMataKuliah = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSKS = new javax.swing.JTextField();
        txtSemester = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtDosen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmbNilai = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNilaiMahasiswa = new javax.swing.JTable();
        btnDetail = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));
        jPanel1.setForeground(new java.awt.Color(0, 255, 153));

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Nilai Mahasiswa");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel8)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Nama Mahasiswa :");

        btnCari.setText("CARI");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        txtNama.setEditable(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("NIM :");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Mata Kuliah :");

        cmbMataKuliah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMataKuliahActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("SKS :");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Semester :");

        txtSKS.setEditable(false);

        txtSemester.setEditable(false);

        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setText("UBAH");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Dosen Pengampu :");

        txtDosen.setEditable(false);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Nilai :");

        cmbNilai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E" }));

        tblNilaiMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNilaiMahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNilaiMahasiswaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNilaiMahasiswa);

        btnDetail.setText("Detail");
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbMataKuliah, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSKS, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbNilai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDosen, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUbah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNim, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCari)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDetail)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel4});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHapus, btnSimpan, btnUbah});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel6, jLabel7});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari)
                    .addComponent(btnDetail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbMataKuliah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtDosen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(cmbNilai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSKS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHapus)
                    .addComponent(btnUbah)
                    .addComponent(btnSimpan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        if (txtNim.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Masukkan nim mahasiswa");
        } else {
            String nim = txtNim.getText();

            String mahasiswaQuery = "select nama from mahasiswa where nim = '" + nim + "'";

            try {
                Statement mahasiswaStatement = connection.createStatement();
                ResultSet mahasiswaResultSet = mahasiswaStatement.executeQuery(mahasiswaQuery);

                if (mahasiswaResultSet.next()) {
                    txtNama.setText(mahasiswaResultSet.getString(1));
                } else {
                    JOptionPane.showMessageDialog(this, "Mahasiswa dengan nim " + nim + " tidak terdaftar", "Warning", JOptionPane.INFORMATION_MESSAGE);
                    txtNama.setText("");
                }

            } catch (SQLException ex) {
                Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        btnDetailActionPerformed(evt);
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        if (tblNilaiMahasiswa.getSelectedRow() != -1) {
            JOptionPane.showMessageDialog(this, "pilih data yang ingin dihapus");
        } else {
            if (JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                Integer nim = Integer.parseInt(txtNim.getText());
                String idMataKuliah = "";

                if (cmbMataKuliah.getSelectedIndex() != 0) {
                    String mataKuliah = cmbMataKuliah.getSelectedItem().toString();

                    String mataKuliahQuery = "select id_mata_kuliah from mata_kuliah where mata_kuliah = '" + mataKuliah + "'";

                    try {
                        Statement mataKuliahStatement = connection.createStatement();
                        ResultSet mataKuliahResultSet = mataKuliahStatement.executeQuery(mataKuliahQuery);

                        if (mataKuliahResultSet.next()) {
                            idMataKuliah = mataKuliahResultSet.getString(1);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                String deleteQuery = "DELETE FROM nilai_mahasiswa WHERE nim=? AND id_mata_kuliah=?";

                try {
                    PreparedStatement statement = connection.prepareStatement(deleteQuery);
                    statement.setInt(1, nim);
                    statement.setString(2, idMataKuliah);
                    statement.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Nilai Mahasiswa Telah Dihapus");
                } catch (SQLException ex) {
                    Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        if (tblNilaiMahasiswa.getSelectedRow() != -1) {
            JOptionPane.showMessageDialog(this, "pilih data yang ingin dihapus");
        } else {
            if (JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                Integer nim = Integer.parseInt(txtNim.getText());
                String nilai = cmbNilai.getSelectedItem().toString();
                String idMataKuliah = "";

                if (cmbMataKuliah.getSelectedIndex() != 0) {
                    String mataKuliah = cmbMataKuliah.getSelectedItem().toString();

                    String mataKuliahQuery = "select id_mata_kuliah from mata_kuliah where mata_kuliah = '" + mataKuliah + "'";

                    try {
                        Statement mataKuliahStatement = connection.createStatement();
                        ResultSet mataKuliahResultSet = mataKuliahStatement.executeQuery(mataKuliahQuery);

                        if (mataKuliahResultSet.next()) {
                            idMataKuliah = mataKuliahResultSet.getString(1);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                String updateQuery = "UPDATE nilai_mahasiswa SET nilai=? WHERE nim=? AND id_mata_kuliah=?";

                try {
                    PreparedStatement statement = connection.prepareStatement(updateQuery);
                    statement.setString(1, nilai);
                    statement.setInt(2, nim);
                    statement.setString(3, idMataKuliah);
                    statement.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Nilai Mahasiswa Telah Diperbarui");
                } catch (SQLException ex) {
                    Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        Integer nim = Integer.parseInt(txtNim.getText());
        String nilai = cmbNilai.getSelectedItem().toString();
        String idMataKuliah = "";

        if (cmbMataKuliah.getSelectedIndex() != 0) {
            String mataKuliah = cmbMataKuliah.getSelectedItem().toString();

            String mataKuliahQuery = "select id_mata_kuliah from mata_kuliah where mata_kuliah = '" + mataKuliah + "'";

            try {
                Statement mataKuliahStatement = connection.createStatement();
                ResultSet mataKuliahResultSet = mataKuliahStatement.executeQuery(mataKuliahQuery);

                if (mataKuliahResultSet.next()) {
                    idMataKuliah = mataKuliahResultSet.getString(1);
                }
            } catch (SQLException ex) {
                Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        String insertQuery = "INSERT INTO nilai_mahasiswa (nim, id_mata_kuliah, nilai) values (?,?,?)";

        try {
            PreparedStatement statement = connection.prepareStatement(insertQuery);
            statement.setInt(1, nim);
            statement.setString(2, idMataKuliah);
            statement.setString(3, nilai);
            statement.executeUpdate();

            JOptionPane.showMessageDialog(this, "Nilai Mahasiswa Telah Disimpan");
        } catch (SQLException ex) {
            Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void cmbMataKuliahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMataKuliahActionPerformed
        // TODO add your handling code here:

        try {
            String mataKuliah = cmbMataKuliah.getSelectedItem().toString();

            String sqlQuery = "select * from mata_kuliah where mata_kuliah = '" + mataKuliah + "'";

            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery(sqlQuery);

            if (resultSet.next()) {
                txtDosen.setText(resultSet.getString("dosen_pengampu"));
                txtSKS.setText(String.valueOf(resultSet.getInt("sks")));
                txtSemester.setText(String.valueOf(resultSet.getInt("semester")));
            } else {
                txtDosen.setText("");
                txtSKS.setText("");
                txtSemester.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbMataKuliahActionPerformed

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        // TODO add your handling code here:
        if (txtNim.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Masukkan nim mahasiswa");
        } else {
            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();

            String nim = txtNim.getText();

            String detailMahasiswaNilaiQuery = "SELECT mahasiswa.nim, mahasiswa.nama, mata_kuliah.mata_kuliah, nilai_mahasiswa.nilai "
                    + "FROM mahasiswa mahasiswa, mata_kuliah mata_kuliah, nilai_mahasiswa "
                    + "WHERE mahasiswa.nim=nilai_mahasiswa.nim AND mata_kuliah.id_mata_kuliah=nilai_mahasiswa.id_mata_kuliah "
                    + "AND mahasiswa.nim='" + nim + "'";

            try {
                Statement detailMahasiswaStatement = connection.createStatement();
                ResultSet detailMahasiswaResultSet = detailMahasiswaStatement.executeQuery(detailMahasiswaNilaiQuery);

                while (detailMahasiswaResultSet.next()) {
                    Object[] dataTabel = new Object[4];
                    dataTabel[0] = detailMahasiswaResultSet.getInt(1);
                    dataTabel[1] = detailMahasiswaResultSet.getString(2);
                    dataTabel[2] = detailMahasiswaResultSet.getString(3);
                    dataTabel[3] = detailMahasiswaResultSet.getString(4);
                    tableModel.addRow(dataTabel);
                }
            } catch (SQLException ex) {
                Logger.getLogger(NilaiPanelView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        btnCariActionPerformed(evt);
    }//GEN-LAST:event_btnDetailActionPerformed

    private void tblNilaiMahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNilaiMahasiswaMouseClicked
        // TODO add your handling code here:
        int row = tblNilaiMahasiswa.getSelectedRow();

        txtNim.setText(tblNilaiMahasiswa.getValueAt(row, 0).toString());
        txtNama.setText(tblNilaiMahasiswa.getValueAt(row, 1).toString());
        cmbMataKuliah.setSelectedItem(tblNilaiMahasiswa.getValueAt(row, 2).toString());
        cmbNilai.setSelectedItem(tblNilaiMahasiswa.getValueAt(row, 3).toString());
    }//GEN-LAST:event_tblNilaiMahasiswaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnDetail;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmbMataKuliah;
    private javax.swing.JComboBox<String> cmbNilai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNilaiMahasiswa;
    private javax.swing.JTextField txtDosen;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNim;
    private javax.swing.JTextField txtSKS;
    private javax.swing.JTextField txtSemester;
    // End of variables declaration//GEN-END:variables
}
